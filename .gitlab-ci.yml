image: docker:latest
services:
  - docker:dind

variables:
  DOCKER_DRIVER: overlay

stages:
  - build
  
docker-build:
  stage: build
  script:
  - TP=./src/environments
  - TF="$TP/environment.prod.ts"
  - PE="$TP/environment.ts"
  - mkdir -p "$TP"
  - printf "export const environment = { \n\t production:true,\n\t firebase:{\n\t apiKey:"$apiKey",\n\t authDomain:"$authDomain",\n\t projectId:"$projectId",\n\t storageBucket:"$storageBucket",\n\t messagingSenderId:"$messagingSenderId",\n\t  appId:"$appId",\n\t measurementId:"$measurementId"}\n  };\n" > "$TF"
  - printf "export const environment = { \n\t production:true,\n\t firebase:{\n\t apiKey:"$apiKey",\n\t authDomain:"$authDomain",\n\t projectId:"$projectId",\n\t storageBucket:"$storageBucket",\n\t messagingSenderId:"$messagingSenderId",\n\t  appId:"$appId",\n\t measurementId:"$measurementId"}\n  };\n" > "$PE"
  - docker build -f Dockerfile --iidfile imageid.txt -t registry.heroku.com/angular-gitlab-test/my-app .
  - docker login -u _ -p $HEROKU_TOKEN registry.heroku.com
  - docker push registry.heroku.com/angular-gitlab-test/my-app
  - apk add --no-cache curl
  - echo "Docker Image ID is $(cat imageid.txt)"
  - |-
    curl -X PATCH https://api.heroku.com/apps/angular-gitlab-test/formation --header "Content-Type: application/json" --header "Accept: application/vnd.heroku+json; version=3.docker-releases" --header "Authorization: Bearer ${HEROKU_TOKEN}" --data '{ "updates": [ { "type": "web", "docker_image": "'$(cat imageid.txt)'" } ] }'